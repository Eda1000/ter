// Generated by https://quicktype.io

export interface Route {
  id: string;
  truck_id: string;
  driver_id: null;
  comments: string;
  is_started: boolean;
  is_finished: boolean;
  cubage: string;
  weight: string;
  distance: number;
  time: number;
  total_orders: number;
  orders_delivered: number;
  total_volumes: number;
  total_pallets: number;
  driver: null;
  truck: Truck;
  route_items: RouteItem[];
  created_at: string;
  updated_at: string;
  color_indicator?: string;
  is_ready: boolean;
  directionsInstance?: any;
  reorder: boolean;
}

export interface RouteItem {
  id: string;
  delivery_time: string;
  delivery_order: number;
  arrival_place: boolean;
  start_discharge: boolean;
  end_discharge: boolean;
  truck_route_id: string;
  invoice: Invoice;
  created_at: string;
  updated_at: string;
  invoice_route_id?: string;
  identifier?: string;
  latitude: number;
  longitude: number;
}

export interface Invoice {
  id: string;
  appointment_date?: string | null;
  invoice_number: string;
  formatted_invoice?: string | null;
  order_number: string;
  client_name: string;
  cubage: string;
  weight: number;
  amount_boxes: number;
  invoice_was_received: boolean;
  cep: string;
  address: string;
  longitude: number;
  latitude: number;
  status: string | null;
  was_delivered: boolean;
  position_occupied: boolean;
  position_id: null;
  amount_read_labels: number;
  collection_completed: boolean;
  storage_completed: boolean;
  available_for_route: boolean;
  user_id: string;
  truck_id: string;
  driver_id: null;
  current_status: null;
  status_id: null;
  updated_at: string;
  identifier?: string;
  delivery_type?: string | null;
  created_at: string;
  position: string;
  collection_orders: ICollectionOrders[];
  user: {
    individual_person: {
      name: string;
    };
    legal_person: {
      name: string;
    };
  };
  invoice_operators?: InvoiceOperator[];
  invoice_progress: InvoiceProgress[];
  pallets: pallets[];
  route_item: {
    truck_route: {
      id: string;
      truck: {
        name: string;
      };
      driver: {
        individual_person: {
          name: string;
        };
      };
    };
  };
}

export interface InvoiceProgress {
  id: string;
  comment: string;
  invoice_id: string;
  invoice_status_id: string;
  invoice_status: InvoiceStatus;
  created_at: Date;
  updated_at: Date;
}

export interface InvoiceStatus {
  id: string;
  name: string;
  description: string;
  created_at: Date;
  updated_at: Date;
}

export interface pallets {
  position: {
    position: string;
  };
}

export interface InvoiceOperator {
  id: string;
  invoice_id: string;
  user_id: string;
  user: User;
  step: string;
  created_at: string;
  updated_at: string;
}

interface ICollectionOrders {
  id: string;
  volume_number: string;
  is_verified: boolean;
  box_id: string;
  invoice_id: string;
  collection_information_id: string;
  pallet_id: string;
  position_id: string;
  loaded: boolean;
  confirm_delivery: boolean;
  has_box: boolean;
  collection_information: ICollectionInformation;
  created_at: string;
  updated_at: string;
}

interface ICollectionInformation {
  id: string;
  client_name: string;
  total_weight: string;
  total_cubage: string;
  discharge_completed: boolean;
  collection_completed: boolean;
  truck_id: string;
  created_at: string;
  updated_at: string;
}

export interface Truck {
  id: string;
  name: string;
  plate: string;
  capacity: string;
  total_weight: number;
  is_available: boolean;
  user_id: string;
  created_at: string;
  updated_at: string;
}

export interface TrucksResponse {
  results: Truck[];
  page: number;
  limit: number;
  total: number;
}

export interface Truck {
  id: string;
  name: string;
  plate: string;
  capacity: string;
  total_weight: number;
  is_available: boolean;
  user_id: string;
  created_at: string;
  updated_at: string;
}

export interface DirectionsRequest {
  origin: string;
  destination: string;
  travelMode: string;
  waypoints: any[];
}

export interface Direction {
  origin: string;
  destination: string;
  travelMode: string;
  waypoints: { location: string }[];
}

export interface IUserResponse {
  results: User[];
  page: number;
  limit: number;
  total: number;
}

export interface User {
  id: string;
  email: string;
  avatar: null | string;
  role_id: string;
  role: Role;
  individual_person: IndividualPerson;
  created_at: string;
  updated_at: string;
  avatar_url: string;
}

export interface IndividualPerson {
  id: string;
  name: string;
  phone_number: null | string;
  user_id: string;
  created_at: string;
  updated_at: string;
}

export interface Role {
  id: string;
  name: string;
  is_admin: boolean;
  created_at: string;
  updated_at: string;
}
